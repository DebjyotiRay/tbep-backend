scalar JSON

schema {
    query: Query
}

type Query {
    getUserID: String!
    getGenes(geneIDs: [String!]!): [Gene!]!
    getGeneInteractions(input: InteractionInput!, order: Int!): GeneInteractionOutput!
}

input InteractionInput {
    geneIDs: [String!]!
    minScore: Float!
    interactionType: String!
    graphName: String
}

type GeneBase {
    ID: ID!
    Description: String
    Gene_name: String
}

type GeneInteractionOutput {
    genes: [GeneBase!]!
    links: [GeneInteraction!]
    graphName: String
}

type GeneInteraction {
    gene1: String!
    gene2: String!
    score: Float!
}

type Gene {
    ID: ID!
    Description: String
    Gene_name: String
    hgnc_gene_id: String
    hgnc_gene_symbol: String
    ALS: JSON
    FTD: JSON
    OI: JSON
    PSP: JSON
    common: JSON
}